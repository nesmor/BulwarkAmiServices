<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Dialog_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Script_model');
    }
    
    /*
     * Get dialog by id
     */
    function get_dialog($id)
    {
        return $this->db->get_where('dialog',array('id'=>$id))->row_array();
    }
    
    /*
     * Get all dialog count
     */
    function get_all_dialog_count()
    {
        $this->db->from('dialog');
        return $this->db->count_all_results();
    }
        
    /*
     * Get all dialog
     */
    function get_all_dialog($params = array())
    {
        if(isset($params) && !empty($params)){
        
            $this->db->limit($params['limit'], $params['offset']);
            if(isset($params['search']) && !empty($params['search']) && $params['search'] > -1){
                $this->db->or_group_start()
                    ->or_where('LOWER(dialog.title) LIKE','%' .strtolower($params['search']) .'%')
                    ->or_where('LOWER(dialog.speech) LIKE', '%' .strtolower($params['search']) .'%')
                    ->or_where('LOWER(dialog.phase) LIKE', '%' .strtolower($params['search']) .'%')
                ->group_end();
            }
            if(isset($params['scriptId']) && !empty($params['scriptId']) && $params['scriptId'] > 0){
                $this->db->group_start()->where('dialog.scriptId',$params['scriptId'])->group_end();
            }
            
        }
        $this->db->select('*, dialog.title as dTitle, dialog.id as dId'); //Active query bugs. Overwrite same fields name
        $this->db->from('dialog');
        $this->db->join('script', 'dialog.scriptId = script.id');
        $this->db->order_by('dialog.id', 'ASC');
       // $query = $this->db->get();
        
        return $this->db->get()->result_array();
    }
    
    
    /*
     * Get all option by script id
     */
    function get_by_script_id($id){
        
        $this->db->where('scriptId', $id);
        $this->db->select('*'); //Active query bugs. Overwrite same fields name
        $this->db->from('dialog');
        $this->db->order_by('actionData', 'ASC');
        return $this->db->get()->result_array();
        
    }
    
    function get_by_script_by_id_and_secuence($id, $secuence){
        
        $this->db->where(array('scriptId'=> $id, 'actionData' => $secuence));
        $this->db->select('*'); //Active query bugs. Overwrite same fields name
        $this->db->from('dialog');
        return $this->db->get()->result_array();
        
    }
        
    /*
     * function to add new dialog
     */
    function add_dialog($params)
    {
        $this->db->where('scriptId', $params['scriptId']);
        $this->db->select('COUNT(*) as count');
        $this->db->from('dialog');
        $result = $this->db->get()->result_array();
        $params['actionData'] = $result[0]['count'] + 1;
        $this->db->insert('dialog',$params);
        $dialogId = $this->db->insert_id();
        if($dialogId > 0 && $result[0]['count'] == 0){
            $this->Script_model->update_script($params['scriptId'], array('initialDialogId' => $dialogId));
        }
        return $dialogId;
    }
    
    /*
     * function to update dialog
     */
    function update_dialog($id,$params)
    {
        $this->db->where('id',$id);
        return $this->db->update('dialog',$params);
    }
    
    
    /*
     * function to delete dialog
     */
    function delete_dialog($id)
    {
        $dialog = $this->get_dialog($id);
        $result = $this->db->delete('dialog',array('id'=>$id));
        $dialogs = $this->get_by_script_id($dialog['scriptId']);
        for($i = 0; $i < count($dialogs); $i++){
            $dialogs[$i]['actionData'] = $i + 1; 
            $this->update_dialog($dialogs[$i]['id'], $dialogs[$i]);
        }
        return $result;
    }
}
